/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

    // Use TestNG framework, also requires calling test.useTestNG() below
    dependencies {
        implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
        testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'
        testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
        testImplementation 'io.rest-assured:json-path:4.3.3'
        testImplementation 'io.rest-assured:xml-path:4.3.3'
        testImplementation 'io.rest-assured:json-schema-validator:4.3.3'


        testImplementation 'org.testng:testng:7.3.0'

        // This dependency is used by the application.
        implementation 'com.google.guava:guava:29.0-jre'

        // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
        implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

        implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.8.1'

    }

application {
    // Define the main class for the application.
    mainClass = 'com.tw.assignment.App'
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}
